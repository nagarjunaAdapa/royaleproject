/**
 * Generated by Apache Royale Compiler from org/apache/royale/html/DynamicDataGrid.as
 * org.apache.royale.html.DynamicDataGrid
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.html.DynamicDataGrid');
/* Royale Dependency List: */

goog.require('org.apache.royale.html.DataGrid');



/**
 * @constructor
 * @extends {org.apache.royale.html.DataGrid}
 */
org.apache.royale.html.DynamicDataGrid = function() {
  org.apache.royale.html.DynamicDataGrid.base(this, 'constructor');
  this.typeNames = "DataGrid DynamicDataGrid";
};
goog.inherits(org.apache.royale.html.DynamicDataGrid, org.apache.royale.html.DataGrid);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.html.DynamicDataGrid', org.apache.royale.html.DynamicDataGrid);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.html.DynamicDataGrid.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'DynamicDataGrid', qName: 'org.apache.royale.html.DynamicDataGrid', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.html.DynamicDataGrid.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {return {};},
    methods: function () {
      return {
        'DynamicDataGrid': { type: '', declaredBy: 'org.apache.royale.html.DynamicDataGrid'}
      };
    }
  };
};
/**
 * @export
 * @const
 * @type {number}
 */
org.apache.royale.html.DynamicDataGrid.prototype.ROYALE_REFLECTION_INFO.compileFlags = 10;
