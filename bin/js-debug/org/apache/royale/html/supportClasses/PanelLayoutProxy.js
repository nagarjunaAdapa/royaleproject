/**
 * Generated by Apache Royale Compiler from org/apache/royale/html/supportClasses/PanelLayoutProxy.as
 * org.apache.royale.html.supportClasses.PanelLayoutProxy
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.html.supportClasses.PanelLayoutProxy');
/* Royale Dependency List: org.apache.royale.core.IChild,org.apache.royale.core.IContainerBaseStrandChildrenHost,org.apache.royale.core.UIBase,org.apache.royale.core.WrappedHTMLElement*/

goog.require('org.apache.royale.core.ILayoutView');
goog.require('org.apache.royale.core.IParent');



/**
 *  Constructor.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @constructor
 * @implements {org.apache.royale.core.ILayoutView}
 * @implements {org.apache.royale.core.IParent}
 * @param {Object} host
 */
org.apache.royale.html.supportClasses.PanelLayoutProxy = function(host) {
  ;
  this.org_apache_royale_html_supportClasses_PanelLayoutProxy__host = host;
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.html.supportClasses.PanelLayoutProxy', org.apache.royale.html.supportClasses.PanelLayoutProxy);


/**
 * @private
 * @type {Object}
 */
org.apache.royale.html.supportClasses.PanelLayoutProxy.prototype.org_apache_royale_html_supportClasses_PanelLayoutProxy__host;


/**
 *  @royaleignorecoercion org.apache.royale.core.IContainerBaseStrandChildrenHost
 *  Get a component from the parent.
 *
 *  @asparam c The index of the subcomponent.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @export
 * @param {number} index
 * @return {org.apache.royale.core.IChild}
 */
org.apache.royale.html.supportClasses.PanelLayoutProxy.prototype.getElementAt = function(index) {
  return this.host.$getElementAt(index);
};


/**
 *  @royaleignorecoercion org.apache.royale.core.IContainerBaseStrandChildrenHost
 *  Gets the index of this subcomponent.
 * 
 *  @asparam c The subcomponent to add.
 *  @asreturn The index (zero-based).
 * 
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @export
 * @param {org.apache.royale.core.IChild} c
 * @return {number}
 */
org.apache.royale.html.supportClasses.PanelLayoutProxy.prototype.getElementIndex = function(c) {
  return this.host.$getElementIndex(c);
};


/**
 *  @royaleignorecoercion org.apache.royale.core.IContainerBaseStrandChildrenHost
 *  Add a component to the parent.
 * 
 *  @asparam c The subcomponent to add.
 *  @asparam dispatchEvent Whether to dispatch an event after adding the child.
 * 
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @export
 * @param {org.apache.royale.core.IChild} c
 * @param {boolean=} dispatchEvent
 */
org.apache.royale.html.supportClasses.PanelLayoutProxy.prototype.addElement = function(c, dispatchEvent) {
  dispatchEvent = typeof dispatchEvent !== 'undefined' ? dispatchEvent : true;
  this.host.$addElement(c);
};


/**
 *  @royaleignorecoercion org.apache.royale.core.IContainerBaseStrandChildrenHost
 *  Add a component to the parent.
 * 
 *  @asparam c The subcomponent to add.
 *  @asparam index The index where the subcomponent should be added.
 *  @asparam dispatchEvent Whether to dispatch an event after adding the child.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @export
 * @param {org.apache.royale.core.IChild} c
 * @param {number} index
 * @param {boolean=} dispatchEvent
 */
org.apache.royale.html.supportClasses.PanelLayoutProxy.prototype.addElementAt = function(c, index, dispatchEvent) {
  dispatchEvent = typeof dispatchEvent !== 'undefined' ? dispatchEvent : true;
  return this.host.$addElementAt(c, index);
};


/**
 *  @royaleignorecoercion org.apache.royale.core.IContainerBaseStrandChildrenHost
 *  Remove a component from the parent.
 * 
 *  @asparam c The subcomponent to remove.
 *  @asparam dispatchEvent Whether to dispatch an event after removing the child.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @export
 * @param {org.apache.royale.core.IChild} c
 * @param {boolean=} dispatchEvent
 */
org.apache.royale.html.supportClasses.PanelLayoutProxy.prototype.removeElement = function(c, dispatchEvent) {
  dispatchEvent = typeof dispatchEvent !== 'undefined' ? dispatchEvent : true;
  return this.host.$removeElement(c);
};


/**
 *  @royaleignorecoercion org.apache.royale.core.UIBase
 *  The display style is used for both visible
 *  and layout so is managed as a special case.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @export
 * @param {string} value
 */
org.apache.royale.html.supportClasses.PanelLayoutProxy.prototype.setDisplayStyleForLayout = function(value) {
  this.host.setDisplayStyleForLayout(value);
};


org.apache.royale.html.supportClasses.PanelLayoutProxy.prototype.get__host = function() {
  return this.org_apache_royale_html_supportClasses_PanelLayoutProxy__host;
};


org.apache.royale.html.supportClasses.PanelLayoutProxy.prototype.get__width = function() {
  return this.host.width;
};


org.apache.royale.html.supportClasses.PanelLayoutProxy.prototype.get__height = function() {
  return this.host.height;
};


org.apache.royale.html.supportClasses.PanelLayoutProxy.prototype.get__numElements = function() {
  return this.host.$numElements;
};


org.apache.royale.html.supportClasses.PanelLayoutProxy.prototype.get__somethingelse = function() {
  return this.host.element;
};


org.apache.royale.html.supportClasses.PanelLayoutProxy.prototype.get__element = function() {
  return this.host.element;
};


org.apache.royale.html.supportClasses.PanelLayoutProxy.prototype.get__displayStyleForLayout = function() {
  return this.host.displayStyleForLayout;
};


Object.defineProperties(org.apache.royale.html.supportClasses.PanelLayoutProxy.prototype, /** @lends {org.apache.royale.html.supportClasses.PanelLayoutProxy.prototype} */ {
/**
  * @export
  * @type {Object} */
host: {
get: org.apache.royale.html.supportClasses.PanelLayoutProxy.prototype.get__host},
/**
  * @export
  * @type {number} */
width: {
get: org.apache.royale.html.supportClasses.PanelLayoutProxy.prototype.get__width},
/**
  * @export
  * @type {number} */
height: {
get: org.apache.royale.html.supportClasses.PanelLayoutProxy.prototype.get__height},
/**
  * @export
  * @type {number} */
numElements: {
get: org.apache.royale.html.supportClasses.PanelLayoutProxy.prototype.get__numElements},
/**
  * @export
  * @type {org.apache.royale.core.WrappedHTMLElement} */
somethingelse: {
get: org.apache.royale.html.supportClasses.PanelLayoutProxy.prototype.get__somethingelse},
/**
  * @export
  * @type {org.apache.royale.core.WrappedHTMLElement} */
element: {
get: org.apache.royale.html.supportClasses.PanelLayoutProxy.prototype.get__element},
/**
  * @export
  * @type {string} */
displayStyleForLayout: {
get: org.apache.royale.html.supportClasses.PanelLayoutProxy.prototype.get__displayStyleForLayout}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.html.supportClasses.PanelLayoutProxy.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'PanelLayoutProxy', qName: 'org.apache.royale.html.supportClasses.PanelLayoutProxy', kind: 'class' }], interfaces: [org.apache.royale.core.ILayoutView, org.apache.royale.core.IParent] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.html.supportClasses.PanelLayoutProxy.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {
      return {
        'host': { type: 'Object', access: 'readonly', declaredBy: 'org.apache.royale.html.supportClasses.PanelLayoutProxy'},
        'width': { type: 'Number', access: 'readonly', declaredBy: 'org.apache.royale.html.supportClasses.PanelLayoutProxy'},
        'height': { type: 'Number', access: 'readonly', declaredBy: 'org.apache.royale.html.supportClasses.PanelLayoutProxy'},
        'numElements': { type: 'int', access: 'readonly', declaredBy: 'org.apache.royale.html.supportClasses.PanelLayoutProxy'},
        'somethingelse': { type: 'org.apache.royale.core.WrappedHTMLElement', access: 'readonly', declaredBy: 'org.apache.royale.html.supportClasses.PanelLayoutProxy'},
        'element': { type: 'org.apache.royale.core.WrappedHTMLElement', access: 'readonly', declaredBy: 'org.apache.royale.html.supportClasses.PanelLayoutProxy'},
        'displayStyleForLayout': { type: 'String', access: 'readonly', declaredBy: 'org.apache.royale.html.supportClasses.PanelLayoutProxy'}
      };
    },
    methods: function () {
      return {
        'PanelLayoutProxy': { type: '', declaredBy: 'org.apache.royale.html.supportClasses.PanelLayoutProxy', parameters: function () { return [ { index: 1, type: 'Object', optional: false } ]; }},
        'getElementAt': { type: 'org.apache.royale.core.IChild', declaredBy: 'org.apache.royale.html.supportClasses.PanelLayoutProxy', parameters: function () { return [ { index: 1, type: 'int', optional: false } ]; }},
        'getElementIndex': { type: 'int', declaredBy: 'org.apache.royale.html.supportClasses.PanelLayoutProxy', parameters: function () { return [ { index: 1, type: 'org.apache.royale.core.IChild', optional: false } ]; }},
        'addElement': { type: 'void', declaredBy: 'org.apache.royale.html.supportClasses.PanelLayoutProxy', parameters: function () { return [ { index: 1, type: 'org.apache.royale.core.IChild', optional: false },{ index: 2, type: 'Boolean', optional: true } ]; }},
        'addElementAt': { type: 'void', declaredBy: 'org.apache.royale.html.supportClasses.PanelLayoutProxy', parameters: function () { return [ { index: 1, type: 'org.apache.royale.core.IChild', optional: false },{ index: 2, type: 'int', optional: false },{ index: 3, type: 'Boolean', optional: true } ]; }},
        'removeElement': { type: 'void', declaredBy: 'org.apache.royale.html.supportClasses.PanelLayoutProxy', parameters: function () { return [ { index: 1, type: 'org.apache.royale.core.IChild', optional: false },{ index: 2, type: 'Boolean', optional: true } ]; }},
        'setDisplayStyleForLayout': { type: 'void', declaredBy: 'org.apache.royale.html.supportClasses.PanelLayoutProxy', parameters: function () { return [ { index: 1, type: 'String', optional: false } ]; }}
      };
    }
  };
};
/**
 * @export
 * @const
 * @type {number}
 */
org.apache.royale.html.supportClasses.PanelLayoutProxy.prototype.ROYALE_REFLECTION_INFO.compileFlags = 10;
